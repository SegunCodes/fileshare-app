<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="File share app built by SegunCodes">
    <title><%= typeof title != 'undefined' ? title: 'File Share' %></title>
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
    <!-- <link rel="stylesheet" href="/css/style.css"> -->
</head>
<body>
    <!-- <input type="hidden" id="base-url" value=""> -->
    <script>
      var months = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec"];
    </script>
    <% 
      months = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec"]
      formatBytes = function(bytes, decimals =2){
        if(bytes === 0) return '0B';
        const k = 1024;
        const dm = decimals < 0 ? 0 : decimals;
        const sizes = ['B','KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
        const i = Math.floor(Math.log(bytes)/Math.log(k));
        return parseFloat((bytes/Math.pow(k,i)).toFixed(dm)) + ' ' + sizes[i];
      } 
      getFolderSize = function(arr){
        var sum = 0;
        for (var a = 0; a < arr.length; a++) {
          if(arr[a].type == "folder"){
              if(arr[a].files.legth > 0){
                sum += getFolderSize(arr[a].files)
              }
          }else{
            sum += arr[a].size;
          }          
        }
        return sum
      }
    
    %>
    <nav class="navbar navbar-expand-lg navbar-light" style="background-color: #e3f2fd;">
        <a class="navbar-brand" href="#">File Share</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavDropdown">
          <ul class="navbar-nav ml-auto">
            <li class="nav-item active">
              <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
            </li>
            <% if(req.user) { %>
            <li class="nav-item">
              <a class="nav-link" href="/MyUploads">My Uploads</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/sharedWithMe">Shared With Me</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/mySharedLinks">My Shared Links</a>
            </li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <%= req.user.username %>
              </a>
              <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                <a class="dropdown-item" href="/logout">logout</a>
              </div>
            </li>
            <% } else { %>
            <li class="nav-item ">
                <a class="nav-link" href="/login">Login</a>
            </li>
            <li class="nav-item ">
                <a class="nav-link" href="/register">Register</a>
            </li> 
            <% } %> 
          </ul>
          <form action="/search" method="get" class="form-inline my-2 lg-0">
            <input type="search" name="search" id="search" class="form-control mr-sm-2" value="<%= req.query.search %>">
            <button type="submit" class="btn btn-outline-primary my-2 my-sm-0">Search</button>
          </form>
        </div>
    </nav>


    <main>
        <%- body -%>
    </main>

    <footer class="py-3" style="background-color: #e3f2fd;">
        <p style="text-align: center;">Developed by <a href="https://olusegun-joe-alabi.netlify.app">SegunCodes</a></p>
    </footer>
    <script src="/js/jquery-3.3.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4" crossorigin="anonymous"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/main.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <script>
      function moveFolder(self){
        const _id = self.getAttribute("data-id")
        const name = self.getAttribute("data-name")
        const type = self.getAttribute("data-type")
        $("#moveModal").modal("show")
        document.querySelector("#moveModal .loading").innerHTML = "Loading..."
        document.getElementById("form-move-file")._id.value = _id
        document.getElementById("form-move-file").type.value = type
        document.querySelector("#moveModal .modal-title").innerHTML = name
        var ajax = new XMLHttpRequest();
          ajax.open("POST", "/getAllFolders", true);
          ajax.onreadystatechange = function(){
              if (this.readyState == 4) {
                  if (this.status == 200) {
                      var data = JSON.parse(this.responseText);
                      document.querySelector("#moveModal .loading").innerHTML = ""
                      if(data.status == "error"){
                          swal("Error", data.message, "error")
                      }
                      if(data.status == "success"){
                          var html = ""
                          html += `
                            <div class="form-group">
                              <label>
                                <input type="radio" name="folder" value="`+folder._id+`" required>`+ folder.folderName +`
                              </label>
                            </div>
                          `;
                          document.querySelector("#form-move-file .all-folders").innerHTML = html;
                      }
                  }
                  if (this.status == 500) {
                      console.log(this.responseText)
                  }
              }
          }
          var formData = new FormData()
          formData.append("_id", _id)
          formData.append("type", type)
          ajax.send(formData)
      }
      function renameFile(self){
        const _id = self.getAttribute("data-id")
        const name = self.getAttribute("data-name")

        var newName = prompt("Enter new name", name);
        if(newName != null){
          document.getElementById("form-rename-file")._id.value = _id
          document.getElementById("form-rename-file").name.value = newName

          document.getElementById("form-rename-file").submit()
        }
      }
      function renameFolder(self){
        const _id = self.getAttribute("data-id")
        const name = self.getAttribute("data-name")

        var newName = prompt("Enter new name", name);
        if(newName != null){
          document.getElementById("form-rename-folder")._id.value = _id
          document.getElementById("form-rename-folder").name.value = newName

          document.getElementById("form-rename-folder").submit()
        }
      }
      function downloadFile(self){
        var _id = self.getAttribute("data-id")
        self.innerHTML = "Loading...";
        self.setAttribute("disabled", "disabled");
        var ajax = new XMLHttpRequest();
        ajax.open("POST", "/downloadFile", true);
        ajax.onreadystatechange = function(){
            if (this.readyState == 4) {
                if (this.status == 200) {
                    var data = JSON.parse(this.responseText);
                    self.removeAttribute("disabled");
                    self.innerHTML = "Download";
                    if(data.status == "error"){
                        swal("Error", data.message, "error")
                    }
                    if(data.status == "success"){
                      //response will be a buffer, convert to base64
                      var binary = ""
                      var bytes = new Uint8Array(data.arrayBuffer.data)
                      var len = bytes.byteLength
                      for (var i = 0; i < len; i++) {
                        binary += String.fromCharCode(bytes[i])
                      }
                      var base64 = window.btoa(binary)
                      base64 = "data:"+data.fileType+";base64,"+base64
                      //download the file
                      const fileName = data.fileName
                      const link = document.createElement('a');
                      //browser support for download attribute
                      if(link.download !== undefined){
                        link.setAttribute("href", base64)
                        link.setAttribute("download", fileName)
                        link.style.visibility = 'hidden'
                        document.body.appendChild(link)
                        link.click()
                        document.body.removeChild(link)
                      }
                    }
                }
                if (this.status == 500) {
                    console.log(this.responseText)
                }
            }
        }
        var formData = new FormData()
        formData.append("_id", _id)
        ajax.send(formData)
      }
      function downloadPublicFile(self){
        var _id = self.getAttribute("data-id")
        var hash = self.getAttribute("data-hash")
        self.innerHTML = "Loading...";
        self.setAttribute("disabled", "disabled");
        var ajax = new XMLHttpRequest();
        ajax.open("POST", "/downloadPublicFile", true);
        ajax.onreadystatechange = function(){
            if (this.readyState == 4) {
                if (this.status == 200) {
                    var data = JSON.parse(this.responseText);
                    self.removeAttribute("disabled");
                    self.innerHTML = "Download";
                    if(data.status == "error"){
                        swal("Error", data.message, "error")
                    }
                    if(data.status == "success"){
                      //response will be a buffer, convert to base64
                      var binary = ""
                      var bytes = new Uint8Array(data.arrayBuffer.data)
                      var len = bytes.byteLength
                      for (var i = 0; i < len; i++) {
                        binary += String.fromCharCode(bytes[i])
                      }
                      var base64 = window.btoa(binary)
                      base64 = "data:"+data.fileType+";base64,"+base64
                      //download the file
                      const fileName = data.fileName
                      const link = document.createElement('a');
                      //browser support for download attribute
                      if(link.download !== undefined){
                        link.setAttribute("href", base64)
                        link.setAttribute("download", fileName)
                        link.style.visibility = 'hidden'
                        document.body.appendChild(link)
                        link.click()
                        document.body.removeChild(link)
                      }
                    }
                }
                if (this.status == 500) {
                    console.log(this.responseText)
                }
            }
        }
        var formData = new FormData()
        formData.append("_id", _id)
        formData.append("hash", hash)
        ajax.send(formData)
      }
      function confirmDeleteFile(form){
        swal({
          title: "Are you sure?",
          text: "Once deleted, you will not be able to recover this file.",
          icon: "warning",
          buttons: true,
          dangerMode: true
        })
        .then(function(willDelete){
          if (willDelete) {
            document.getElementById("form-delete-file").submit();
          }
        })
      }
      function showSharedWithModal(self){
          const _id = self.getAttribute("data-id");
          $("#sharedWithModal").modal("show")
          document.querySelector("#sharedWithModal .loading").innerHTML = "Loading..."
          var ajax = new XMLHttpRequest();
          ajax.open("POST", "/get-file-shared-with", true);
          ajax.onreadystatechange = function(){
              if (this.readyState == 4) {
                  if (this.status == 200) {
                      var data = JSON.parse(this.responseText);
                      document.querySelector("#sharedWithModal .loading").innerHTML = ""
                      if(data.status == "error"){
                          swal("Error", data.message, "error")
                      }
                      if(data.status == "success"){
                          var html = ""
                          for (var a = 0; a < data.users.length; a++) {
                              const user = data.users[a];
                              var sharedAt = user.sharedObj.sharedAt
                              sharedAt = new Date(sharedAt)
                              sharedAt = sharedAt.getDate() + " " + months[sharedAt.getMonth()] + ", " + sharedAt.getFullYear()
                              + " " + sharedAt.getHours() + ":" + sharedAt.getMinutes() + ":" + sharedAt.getSeconds();
                              html += `
                                  <tr>
                                      <td>` +user.username+ `<td>
                                      <td>` +user.email+ `<td>
                                      <td>` +sharedAt+ `<td>
                                      <td>
                                          <form method="POST" action="/removeSharedAccess" onsubmit="return confirm('Are you sure you want to remove this shared access')">
                                              <input type="hidden" name="_id" value="`+user.sharedObj._id+`">
                                              <button type="submit" class="btn btn-danger">Remove</button>
                                          </form>
                                      </td>
                                  <tr>
                              `;
                          }
                          document.querySelector("#sharedWithModal .modal-body tbody").innerHTML = html
                      }
                  }
                  if (this.status == 500) {
                      console.log(this.responseText)
                  }
              }
          }
          var formData = new FormData()
          formData.append("_id", _id)
          ajax.send(formData)
      }
      function searchUserForShare(self){
          self.innerHTML = "Loading...";
          self.setAttribute("disabled", "disabled");
          var ajax = new XMLHttpRequest();
          ajax.open("POST", "/getUser", true);
          ajax.onreadystatechange = function(){
              if (this.readyState == 4) {
                if (this.status == 200) {
                    var data = JSON.parse(this.responseText);
                    self.removeAttribute("disabled");
                    self.innerHTML = "Confirm User";
                    if(data.status == "error"){
                        swal("Error", data.message, "error")
                    }
                    if(data.status == "success"){
                        var html = ""
                        html += "<p>Name: "+data.user.name + "</p>";
                        document.getElementById("user-details-for-share").innerHTML = html;
                    }
                }
                if (this.status == 500) {
                    console.log(this.responseText)
                }
              }
          }
          var form = document.getElementById("form-share-modal")
          var formData = new FormData(form)
          ajax.send(formData)
      }
      function showShareModal(self){
          document.getElementById("form-share-modal")._id.value = self.getAttribute("data-id");
          document.getElementById("form-share-modal").type.value = self.getAttribute("data-type");
          $("#shareModal").modal("show")
      }
      function viewFile(self){
          var _id = self.getAttribute("data-id")
          var name = self.getAttribute("data-name")
          var type = self.getAttribute("data-type")
          var createdAt = self.getAttribute("data-created-at")
          createdAt = parseFloat(createdAt)
          createdAt = new Date(createdAt)
          createdAt = createdAt.getDate() + " " + months[createdAt.getMonth()] + ", " + createdAt.getFullYear()
          + " " + createdAt.getHours() + ":" + createdAt.getMinutes() + ":" + createdAt.getSeconds();
  
          document.querySelector("#viewFileModal .modal-title").innerHTML = name;
          var modalBodyHtml = "";
          modalBodyHtml += "<p>Created on: "+ createdAt + "</p>"
          modalBodyHtml += "<button type='button' class='btn btn-success' data-id='"+_id+"' onclick='downloadFile(this)'>Download</button>"
          document.querySelector("#viewFileModal .modal-body").innerHTML = modalBodyHtml
          $("#viewFileModal").modal("show")
          document.getElementById("form-delete-file")._id.value = _id;

          document.getElementById("button-share-file").setAttribute("data-id", _id)
          document.getElementById("button-share-file").setAttribute("data-type", type)

          document.getElementById("button-rename-file").setAttribute("data-id", _id)
          document.getElementById("button-rename-file").setAttribute("data-name", name)
          document.getElementById("form-share-link")._id.value = _id;
      }
      function confirmUpload(){
          if (confirm("Upload the selected file to the server?")) {
              document.getElementById("form-upload-file").submit();
          }
      }
      function selectFileForUpload(){
          document.getElementById("input-upload-file").click();
      }
      function onclickCreateFolder(){
          var folderName = prompt("Please enter folder name", "");
          if(folderName != null){
              document.getElementById("createFolder").name.value =  folderName;
              document.getElementById("createFolder").submit();
          }
      }
  </script>
</body>
</html>